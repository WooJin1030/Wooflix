{"version":3,"sources":["api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js","assets/noPosterSmall.jpg"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","collectionApi","Container","styled","div","Title","span","Grid","Section","title","children","SLoader","Loader","LoaderSpinner","type","color","height","width","timeout","Text","props","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","role","aria-label","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","map","movie","original_title","poster_path","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","tv","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","serchTerm","SHeader","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","includes","TVPresenter","topRated","airingToday","TVContainer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","PageContainer","Page","PageLogo","img","PageSite","DetailTabs","Tabs","CreatorContainer","Creators","CreatorImg","CreatorName","ProductionContainer","ProductTitle","h2","ProductCountries","ProductCountry","ProductCompanies","ProductItem","ProductImage","ProductMeta","TrailerContainer","Trailer","TrailerA","Player","ReactPlayer","CollectionConatainer","CollectionExist","CollectionLink","SeasonContainer","Seasons","SeasonImg","SeasonName","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","imdb_id","href","src","alt","homepage","created_by","creator","profile_path","production_countries","country","iso_3166_1","production_companies","company","logo_path","origin_country","videos","video","key","url","belongs_to_collection","seasons","season","season_number","propTypes","PropTypes","object","string","bool","isRequired","DetailContainer","match","push","history","parsedId","parseInt","isNaN","console","log","Series","SeriesItem","SeriesCover","SeriesMeta","SeriesTitle","SeriesOverview","CollectionPresenter","parts","part","CollectionContainer","Router","path","exact","component","Home","TV","Search","Detail","Collection","from","globalStyles","createGlobalStyle","reset","App","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43d85345.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"3398523b33dcb43b34b4f178dd2cd31f\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const collectionApi = {\r\n  collection: (id) => api.get(`collection/${id}`),\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst SLoader = styled(Loader)`\r\n  height: calc(100vh - 50px);\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst LoaderSpinner = () => (\r\n  <SLoader\r\n    type=\"Puff\"\r\n    color=\"#ff0000\"\r\n    height={100}\r\n    width={100}\r\n    timeout={3000}\r\n  />\r\n);\r\n\r\nexport default LoaderSpinner;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 300ms ease-in-out;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n  transition: opacity 300ms ease-in-out;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.jpg\").default\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Wooflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import { moviesApi } from \"api\";\r\nimport React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nconst HomeClass = class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch (err) {\r\n      this.setState({\r\n        error: \"Can't get movies infomation\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    // console.log(this.state);\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default HomeClass;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport LoaderSpinner from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-top: 24px;\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  error,\r\n  loading,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Wooflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies Or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <LoaderSpinner />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                isMovie={true}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message color=\"#e74c3c\" text={error} />}\r\n    {tvResults &&\r\n      movieResults &&\r\n      tvResults.length === 0 &&\r\n      movieResults.length === 0 && (\r\n        <Message text={`Nothing Found`} color=\"#95a5a6\" />\r\n      )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nconst SearchClass = class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    // console.log(value);\r\n\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n\r\n      this.setState({ movieResults, tvResults });\r\n    } catch (err) {\r\n      this.setState({\r\n        error: \"Can't find results.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n    // console.log(this.state);\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        serchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default SearchClass;\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SHeader = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.5);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid\r\n    ${(props) => (props.current ? \"#E50914\" : \"transparent\")};\r\n  transition: border-bottom 500ms ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Header = ({ location: { pathname } }) => {\r\n  return (\r\n    <SHeader>\r\n      <List>\r\n        <Item current={pathname === \"/\" || pathname.includes(\"movie\")}>\r\n          <SLink to=\"/\">Movies</SLink>\r\n        </Item>\r\n        <Item current={pathname === \"/tv\" || pathname.includes(\"show\")}>\r\n          <SLink to=\"/tv\">TV</SLink>\r\n        </Item>\r\n        <Item current={pathname === \"/search\"}>\r\n          <SLink to=\"/search\">Search</SLink>\r\n        </Item>\r\n      </List>\r\n    </SHeader>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport LoaderSpinner from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Wooflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <LoaderSpinner />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                isMovie={false}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                isMovie={false}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                isMovie={false}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nconst TVClass = class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch (err) {\r\n      this.setState({\r\n        error: \"Can't find TV Informations\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    // console.log(this.state);\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default TVClass;\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport ReactPlayer from \"react-player\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport LoaderSpinner from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(5px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 70%;\r\n`;\r\n\r\nconst PageContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Page = styled.div`\r\n  width: fit-content;\r\n  background-color: gray;\r\n  border-radius: 8px;\r\n  padding: 0 8px;\r\n  margin-top: 16px;\r\n  margin-bottom: 16px;\r\n  margin-right: 12px;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n  transition: transform 300ms ease-in;\r\n`;\r\n\r\nconst PageLogo = styled.img`\r\n  width: 40px;\r\n  height: 30px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst PageSite = styled.a`\r\n  display: flex;\r\n  align-items: center;\r\n  line-height: 30px;\r\n`;\r\n\r\nconst DetailTabs = styled(Tabs)`\r\n  width: 80%;\r\n  min-height: 40vh;\r\n  margin: auto;\r\n  margin-top: 16px;\r\n`;\r\n\r\nconst CreatorContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst Creators = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 12px;\r\n  width: 30%;\r\n  height: 100%;\r\n`;\r\n\r\nconst CreatorImg = styled.img`\r\n  width: 80%;\r\n`;\r\n\r\nconst CreatorName = styled.span`\r\n  font-size: 16px;\r\n`;\r\n\r\nconst ProductionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ProductTitle = styled.h2`\r\n  font-size: 16px;\r\n  margin: 16px 0;\r\n  color: #ff0000;\r\n`;\r\n\r\nconst ProductCountries = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst ProductCountry = styled.span`\r\n  font-size: 12px;\r\n  margin-right: 4px;\r\n  opacity: 0.7;\r\n`;\r\n\r\nconst ProductCompanies = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst ProductItem = styled.div`\r\n  width: 20%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst ProductImage = styled.img`\r\n  max-width: 80%;\r\n  max-height: 100px;\r\n  margin-bottom: 8px;\r\n  background-color: white;\r\n  opacity: 0.7;\r\n  padding: 8px;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst ProductMeta = styled.span`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n`;\r\n\r\nconst TrailerContainer = styled.div`\r\n  font-size: 14px;\r\n  height: 50vh;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst Trailer = styled.div`\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst TrailerA = styled.a``;\r\n\r\nconst Player = styled(ReactPlayer)`\r\n  margin-top: 8px;\r\n`;\r\n\r\nconst CollectionConatainer = styled.div`\r\n  margin-top: 24px;\r\n  font-size: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst CollectionExist = styled.span`\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst CollectionLink = styled.h3`\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    color: #e50914;\r\n  }\r\n  transition: transform 300ms ease-in;\r\n`;\r\n\r\nconst SeasonContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  padding: 24px;\r\n\r\n  overflow-x: scroll;\r\n  overflow-y: hidden;\r\n`;\r\n\r\nconst Seasons = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  justify-content: center;\r\n\r\n  width: 30%;\r\n  height: 40vh;\r\n`;\r\n\r\nconst SeasonImg = styled.img`\r\n  padding: 24px;\r\n`;\r\n\r\nconst SeasonName = styled.span`\r\n  font-size: 16px;\r\n`;\r\n\r\nconst DetailPresenter = withRouter(\r\n  ({ location: { pathname }, result, error, loading }) =>\r\n    loading ? (\r\n      <>\r\n        <Helmet>\r\n          <title>Loading | Wooflix</title>\r\n        </Helmet>\r\n        <LoaderSpinner />\r\n      </>\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}{\" \"}\r\n            | Wooflix\r\n          </title>\r\n        </Helmet>\r\n        <Backdrop\r\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n        <Content>\r\n          <Cover\r\n            bgImage={\r\n              result.poster_path\r\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                : require(\"../../assets/noPosterSmall.jpg\")\r\n            }\r\n          />\r\n          <Data>\r\n            <Title>\r\n              {result.original_title\r\n                ? result.original_title\r\n                : result.original_name}\r\n            </Title>\r\n            <ItemContainer>\r\n              <Item>\r\n                {result.release_date && result.release_date.substring(0, 4)}\r\n                {result.first_air_date && result.first_air_date.substring(0, 4)}\r\n              </Item>\r\n              <Divider>|</Divider>\r\n              <Item>\r\n                {result.runtime || result.runtime === 0\r\n                  ? result.runtime\r\n                  : result.episode_run_time[0]}{\" \"}\r\n                min\r\n              </Item>\r\n              <Divider>|</Divider>\r\n              <Item>\r\n                {result.genres &&\r\n                  result.genres.map((genre, index) =>\r\n                    index === result.genres.length - 1\r\n                      ? genre.name\r\n                      : `${genre.name} / `\r\n                  )}{\" \"}\r\n              </Item>\r\n            </ItemContainer>\r\n            <Overview>{result.overview}</Overview>\r\n            <PageContainer>\r\n              {result.imdb_id && (\r\n                <Page key=\"page1\">\r\n                  <PageSite\r\n                    href={`https://www.imdb.com/title/${result.imdb_id}`}\r\n                  >\r\n                    <PageLogo\r\n                      src=\"https://user-images.githubusercontent.com/62231339/123267872-71db1480-d538-11eb-9fe2-22f3f2606795.png\"\r\n                      alt=\"page img\"\r\n                    />\r\n                    Watch in IMDb\r\n                  </PageSite>\r\n                </Page>\r\n              )}\r\n\r\n              {result.homepage && (\r\n                <Page key=\"page2\">\r\n                  <PageSite href={result.homepage}>\r\n                    Move to Official Homepage\r\n                  </PageSite>\r\n                </Page>\r\n              )}\r\n            </PageContainer>\r\n\r\n            <DetailTabs>\r\n              <TabList>\r\n                {pathname.includes(\"show\") && <Tab>Creator</Tab>}\r\n                <Tab>Productions</Tab>\r\n                <Tab>Youtube Videos</Tab>\r\n                {pathname.includes(\"movie\") && <Tab>Series</Tab>}\r\n                {pathname.includes(\"show\") && <Tab>Seasons</Tab>}\r\n              </TabList>\r\n              {pathname.includes(\"show\") && (\r\n                <TabPanel>\r\n                  <CreatorContainer>\r\n                    {result.created_by &&\r\n                      result.created_by.map((creator) => (\r\n                        <Creators key={creator.id}>\r\n                          <CreatorImg\r\n                            src={\r\n                              creator.profile_path\r\n                                ? `https://image.tmdb.org/t/p/original${creator.profile_path}`\r\n                                : \"https://user-images.githubusercontent.com/62231339/123796388-0c17cf80-d920-11eb-87d7-50dc9e5b628d.jpg\"\r\n                            }\r\n                            alt=\"creator img\"\r\n                          ></CreatorImg>\r\n                          <CreatorName>{creator.name}</CreatorName>\r\n                        </Creators>\r\n                      ))}\r\n                  </CreatorContainer>\r\n                </TabPanel>\r\n              )}\r\n              <TabPanel>\r\n                <ProductionContainer>\r\n                  <ProductTitle>Product Country</ProductTitle>\r\n                  <ProductCountries>\r\n                    {result.production_countries.map((country, index) =>\r\n                      index === result.production_countries.length - 1 ? (\r\n                        <ProductCountry key={country.iso_3166_1}>\r\n                          {country.name}\r\n                        </ProductCountry>\r\n                      ) : (\r\n                        <ProductCountry key={country.iso_3166_1}>\r\n                          {country.name},{\" \"}\r\n                        </ProductCountry>\r\n                      )\r\n                    )}\r\n                  </ProductCountries>\r\n\r\n                  <ProductTitle>Product Companies</ProductTitle>\r\n                  <ProductCompanies>\r\n                    {result.production_companies.map((company, index) => (\r\n                      <ProductItem key={company.id}>\r\n                        {\r\n                          <>\r\n                            <ProductImage\r\n                              src={\r\n                                company.logo_path !== null\r\n                                  ? `https://image.tmdb.org/t/p/original${company.logo_path}`\r\n                                  : \"https://user-images.githubusercontent.com/62231339/123788471-05388f00-d917-11eb-8459-0d366f77da4c.png\"\r\n                              }\r\n                              alt=\"logo\"\r\n                            />\r\n\r\n                            {company.origin_country ? (\r\n                              <ProductMeta>\r\n                                {company.name} / {company.origin_country}{\" \"}\r\n                              </ProductMeta>\r\n                            ) : (\r\n                              <ProductMeta> {company.name}</ProductMeta>\r\n                            )}\r\n                          </>\r\n                        }\r\n                      </ProductItem>\r\n                    ))}\r\n                  </ProductCompanies>\r\n                </ProductionContainer>\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <TrailerContainer>\r\n                  {result.videos.results.map((video) => (\r\n                    <Trailer key={video.id}>\r\n                      <TrailerA\r\n                        href={`https://www.youtube.com/watch?v=${video.key}`}\r\n                      >\r\n                        {video.name}\r\n                      </TrailerA>\r\n                      <Player\r\n                        url={`https://www.youtube.com/watch?v=${video.key}`}\r\n                      />\r\n                    </Trailer>\r\n                  ))}\r\n                </TrailerContainer>\r\n              </TabPanel>\r\n              {pathname.includes(\"movie\") && (\r\n                <TabPanel>\r\n                  <CollectionConatainer>\r\n                    {result.belongs_to_collection && (\r\n                      <>\r\n                        <CollectionExist>Watch Other Series?</CollectionExist>\r\n                        <Link\r\n                          to={`/collection/${result.belongs_to_collection.id}`}\r\n                        >\r\n                          <CollectionLink>➜</CollectionLink>\r\n                        </Link>\r\n                      </>\r\n                    )}\r\n                  </CollectionConatainer>\r\n                </TabPanel>\r\n              )}\r\n\r\n              {pathname.includes(\"show\") && (\r\n                <TabPanel>\r\n                  <SeasonContainer>\r\n                    {result.seasons &&\r\n                      result.seasons.map((season) => (\r\n                        <Seasons key={season.id}>\r\n                          <SeasonImg\r\n                            src={\r\n                              season.poster_path\r\n                                ? `https://image.tmdb.org/t/p/original${season.poster_path}`\r\n                                : \"https://user-images.githubusercontent.com/62231339/123796388-0c17cf80-d920-11eb-87d7-50dc9e5b628d.jpg\"\r\n                            }\r\n                            alt=\"creator img\"\r\n                          ></SeasonImg>\r\n                          <SeasonName>\r\n                            #{season.season_number}. {season.name}\r\n                          </SeasonName>\r\n                        </Seasons>\r\n                      ))}\r\n                  </SeasonContainer>\r\n                </TabPanel>\r\n              )}\r\n            </DetailTabs>\r\n          </Data>\r\n        </Content>\r\n      </Container>\r\n    )\r\n);\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nconst DetailClass = class extends React.Component {\r\n  state = {\r\n    result: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n      location: { pathname },\r\n    } = this.props;\r\n\r\n    this.isMovie = pathname.includes(\"/movie/\");\r\n\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    let result = null;\r\n\r\n    try {\r\n      if (this.isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n\r\n      console.log(result);\r\n    } catch (err) {\r\n      this.setState({ error: \"Can't find anything\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n};\r\n\r\nexport default DetailClass;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport LoaderSpinner from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(5px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 70%;\r\n`;\r\n\r\nconst Series = styled.ul`\r\n  width: 100%;\r\n  height: 90%;\r\n  margin-top: 24px;\r\n\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst SeriesItem = styled.li`\r\n  width: 100%;\r\n  height: 25%;\r\n  display: flex;\r\n`;\r\n\r\nconst SeriesCover = styled.div`\r\n  width: 20%;\r\n  height: 80%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n  margin-right: 12px;\r\n  opacity: 0.7;\r\n`;\r\n\r\nconst SeriesMeta = styled.a`\r\n  width: 80%;\r\n`;\r\n\r\nconst SeriesTitle = styled.h3`\r\n  font-size: 24px;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nconst SeriesOverview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 70%;\r\n`;\r\n\r\nconst CollectionPresenter = ({ result, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Loading | Wooflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <LoaderSpinner />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>{result.name} | Wooflix</title>\r\n        </Helmet>\r\n        <Backdrop\r\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n        <Content>\r\n          <Cover\r\n            bgImage={\r\n              result.poster_path\r\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                : \"https://user-images.githubusercontent.com/62231339/123789813-86445600-d918-11eb-8cf5-417dc0c70df6.jpg\"\r\n            }\r\n          />\r\n          <Data>\r\n            <Title>{result.name}</Title>\r\n            <Overview>{result.overview}</Overview>\r\n\r\n            <Series>\r\n              {result.parts.map((part, index) => (\r\n                <SeriesItem key={part.id}>\r\n                  <>\r\n                    <SeriesCover\r\n                      bgImage={\r\n                        part.poster_path\r\n                          ? `https://image.tmdb.org/t/p/original${part.poster_path}`\r\n                          : \"https://user-images.githubusercontent.com/62231339/123789813-86445600-d918-11eb-8cf5-417dc0c70df6.jpg\"\r\n                      }\r\n                    />\r\n                    <SeriesMeta href={`/movie/${part.id}`}>\r\n                      <SeriesTitle>{part.original_title}</SeriesTitle>\r\n                      <SeriesOverview>\r\n                        {part.overview.substring(0, 300)}...\r\n                      </SeriesOverview>\r\n                    </SeriesMeta>\r\n                  </>\r\n                </SeriesItem>\r\n              ))}\r\n            </Series>\r\n          </Data>\r\n        </Content>\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default CollectionPresenter;\r\n","import CollectionContainer from \"./CollectionContainer\";\r\n\r\nexport default CollectionContainer;\r\n","import { collectionApi } from \"api\";\r\nimport React from \"react\";\r\nimport CollectionPresenter from \"./CollectionPresenter\";\r\n\r\nconst CollectionClass = class extends React.Component {\r\n  state = {\r\n    result: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    try {\r\n      const { data: result } = await collectionApi.collection(parsedId);\r\n      this.setState({ result });\r\n      console.log(result);\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return (\r\n      <CollectionPresenter result={result} error={error} loading={loading} />\r\n    );\r\n  }\r\n};\r\n\r\nexport default CollectionClass;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"./Header\";\r\nimport TV from \"Routes/TV\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Collection from \"Routes/Collection\";\r\n\r\nconst Router = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Route path=\"/collection/:id\" component={Collection} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    body {\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 12px;\r\n        background-color: rgba(20, 20, 20, 1);  \r\n        color: white; \r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App.js\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n","export default __webpack_public_path__ + \"static/media/noPosterSmall.fb413894.jpg\";"],"sourceRoot":""}